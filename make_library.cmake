macro(make_library output_path ouput_include found)
# Add source to this project's executable.
set(SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
file(GLOB_RECURSE SOURCES CONFIGURE_DEPENDS ${SRC_DIR}/*.cpp)
set(INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
file(GLOB_RECURSE HEADERS CONFIGURE_DEPENDS ${INCLUDE_DIR}/*.h)

option(${PROJECT_NAME}_PREFER_USE_PREBUILT "set ${PROJECT_NAME}_PREFER_USE_PREBUILT ON to use prebuilt if exists one - default is OFF" OFF)
set(PREBUILT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/lib)
set(HOST_SYSTEM_PROCESSOR ${CMAKE_HOST_SYSTEM_PROCESSOR})
find_library(MYSELF_FIND_d NAMES ${PROJECT_NAME}_${HOST_SYSTEM_PROCESSOR}d PATHS ${PREBUILT_PATH} NO_CACHE)
find_library(MYSELF_FIND_r NAMES ${PROJECT_NAME}_${HOST_SYSTEM_PROCESSOR} PATHS ${PREBUILT_PATH} NO_CACHE)
if (MYSELF_FIND_d AND MYSELF_FIND_r AND PARENT_PROJECT AND ${PROJECT_NAME}_PREFER_USE_PREBUILT)
message("found prebuilt library ${MYSELF_FIND_d} ${MYSELF_FIND_r}")
message("use variable PREBUILT_${PROJECT_NAME} to obtain lib path")
message("use variable ${PROJECT_NAME}_INCLUDE to obtain include dir")
set(${output_path} debug ${MYSELF_FIND_d} optimized ${MYSELF_FIND_r} PARENT_SCOPE)
set(${ouput_include} ${INCLUDE_DIR} PARENT_SCOPE)
set(${found} TRUE)
else()
message("building library ${PROJECT_NAME}")

add_library(${PROJECT_NAME} ${SOURCES})
target_sources(${PROJECT_NAME} PUBLIC
    FILE_SET HEADERS
    BASE_DIRS ${INCLUDE_DIR}
    FILES ${HEADERS}
)
foreach(BUILD_ENTRY IN LISTS CMAKE_CONFIGURATION_TYPES)
string(TOUPPER ${BUILD_ENTRY} CONFIG)
set_target_properties(${PROJECT_NAME} PROPERTIES
    LIBRARY_OUTPUT_DIRECTORY_${CONFIG} ${CMAKE_CURRENT_SOURCE_DIR}/lib
    ARCHIVE_OUTPUT_DIRECTORY_${CONFIG} ${CMAKE_CURRENT_SOURCE_DIR}/lib
    RUNTIME_OUTPUT_DIRECTORY_${CONFIG} ${CMAKE_CURRENT_SOURCE_DIR}/lib
)
endforeach()
set_target_properties(${PROJECT_NAME} PROPERTIES
    LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib
    ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib
    OUTPUT_NAME ${PROJECT_NAME}_${HOST_SYSTEM_PROCESSOR}$<$<CONFIG:Debug>:d>
)
endif()
endmacro()